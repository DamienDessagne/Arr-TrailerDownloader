[Config]
# Whether to log everything the script does
log_activity = True

# Your TMDB API key, OPTIONAL. If not provided, language-dependant features won't be activated
tmdb_api_key = YOUR_API_KEY

# Youtube API key (see https://developers.google.com/youtube/v3/getting-started)
youtube_api_key = YOUR_API_KEY

# Browser name to get cookies from to download YouTube videos with age restrictions. See https://github.com/yt-dlp/yt-dlp/wiki/FAQ#how-do-i-pass-cookies-to-yt-dlp for details.
# 	supported values at the time of writing this: brave, chrome, chromium, edge, firefox, opera, safari, vivaldi, whale
yt_dlp_cookies_browser = firefox

# Language-dependant parameters to search for trailers on Youtube.
#   use_original_movie_name : True | False, whether to use the english name or the original name to search for the trailer
#   search_keywords : the suffix appended to the YouTube search query for a specific language. The resulting query will be something like 'Movie Title YEAR keywords'.
# You can add more languages simply by duplicating the section and specifying the language code in the section's name
# Example :
# [YoutubeParams.fr]
# use_original_movie_name = True
# search_keywords = bande annonce
[YoutubeParams.default]
use_original_movie_name = False
search_keywords = trailer[ReencodeRules]

[ReencodeRules]
# OPTIONAL
# Use this section to specify the reencoding rules to apply to downloaded trailers. For instance, if you want videos in AV1 to be reencoded to H264, add a line with `video.av1 = libx264`.
# For a list of encoders, use `ffmpeg -encoders`
# Format: {audio|video}.source_codec = target_codec
video.av1 = h264
video.vp9 = h264
audio.eac3 = ac3

[EncodingParams]
# OPTIONAL
# Use this section to specify additional encoding parameters for your encoding rules. Video encoding parameters
# Format: {audio|video}.target_codec.param = value
video.h264.crf = 28
video.h264.preset = faster